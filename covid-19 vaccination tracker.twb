<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
        <calculation class='tableau' formula='#2021-10-25#' />
      </column>
      <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
        <calculation class='tableau' formula='#2020-01-09#' />
      </column>
    </datasource>
    <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' inline='true' name='federated.006hhs91aw80fz1ch73z004u3oa3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='textscan.0ibiqii0mufw1i1d8wjmq1349d2a'>
            <connection class='textscan' directory='C:/Users/smart/Downloads' filename='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ibiqii0mufw1i1d8wjmq1349d2a' name='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' table='[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='boolean' name='Date Range Selected' ordinal='2' />
            <column datatype='string' name='Excess Mortality' ordinal='3' />
            <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
            <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
            <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
            <column datatype='string' name='Extreme Poverty' ordinal='7' />
            <column datatype='string' name='Female Smokers' ordinal='8' />
            <column datatype='string' name='Hosp Patients' ordinal='9' />
            <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
            <column datatype='string' name='Icu Patients' ordinal='11' />
            <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
            <column datatype='string' name='Iso Code' ordinal='13' />
            <column datatype='string' name='Location' ordinal='14' />
            <column datatype='string' name='Location (copy)' ordinal='15' />
            <column datatype='string' name='Location (geo)' ordinal='16' />
            <column datatype='string' name='Male Smokers' ordinal='17' />
            <column datatype='string' name='New Tests' ordinal='18' />
            <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
            <column datatype='string' name='New Tests Smoothed' ordinal='20' />
            <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
            <column datatype='string' name='Positive Rate' ordinal='22' />
            <column datatype='string' name='Tests Per Case' ordinal='23' />
            <column datatype='string' name='Tests Units' ordinal='24' />
            <column datatype='string' name='Total Tests' ordinal='25' />
            <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
            <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
            <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
            <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
            <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
            <column datatype='real' name='Aged 65 Older' ordinal='31' />
            <column datatype='real' name='Aged 70 Older' ordinal='32' />
            <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
            <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
            <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
            <column datatype='real' name='Gdp Per Capita' ordinal='36' />
            <column datatype='real' name='Handwashing Facilities' ordinal='37' />
            <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
            <column datatype='real' name='Human Development Index' ordinal='39' />
            <column datatype='real' name='Life Expectancy' ordinal='40' />
            <column datatype='real' name='Median Age' ordinal='41' />
            <column datatype='integer' name='New Cases' ordinal='42' />
            <column datatype='real' name='New Cases Per Million' ordinal='43' />
            <column datatype='real' name='New Cases Smoothed' ordinal='44' />
            <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
            <column datatype='integer' name='New Deaths' ordinal='46' />
            <column datatype='real' name='New Deaths Per Million' ordinal='47' />
            <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
            <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
            <column datatype='integer' name='New Vaccinations' ordinal='50' />
            <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
            <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
            <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
            <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
            <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
            <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
            <column datatype='integer' name='People Vaccinated' ordinal='57' />
            <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
            <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
            <column datatype='integer' name='Population' ordinal='60' />
            <column datatype='real' name='Population Density' ordinal='61' />
            <column datatype='real' name='Reproduction Rate' ordinal='62' />
            <column datatype='real' name='Stringency Index' ordinal='63' />
            <column datatype='integer' name='Total Boosters' ordinal='64' />
            <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
            <column datatype='integer' name='Total Cases' ordinal='66' />
            <column datatype='real' name='Total Cases Per Million' ordinal='67' />
            <column datatype='integer' name='Total Deaths' ordinal='68' />
            <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
            <column datatype='integer' name='Total Vaccinations' ordinal='70' />
            <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
            <column datatype='real' name='Vaccinated over Population' ordinal='72' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Range Selected</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Date Range Selected]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Date Range Selected</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Absolute]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Absolute</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Per Million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Extreme Poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Extreme Poverty]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Extreme Poverty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Female Smokers]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Female Smokers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hosp Patients</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hosp Patients Per Million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Icu Patients</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Icu Patients Per Million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iso Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Iso Code]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Iso Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (copy)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (copy)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location (copy)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (geo)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (geo)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location (geo)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Male Smokers]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Male Smokers</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Per Thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Smoothed Per Thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Positive Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Positive Rate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Per Case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Per Case]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Tests Per Case</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Units]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Tests Units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Tests Per Thousand</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions Per Million</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Icu Admissions</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Icu Admissions Per Million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 65 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 65 Older]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Aged 65 Older</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 70 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 70 Older]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Aged 70 Older</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cardiovasc Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cardiovasc Death Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Cardiovasc Death Rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes Prevalence]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Diabetes Prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fully Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fully Vaccinated over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Fully Vaccinated over Population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gdp Per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gdp Per Capita]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Gdp Per Capita</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Handwashing Facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Handwashing Facilities]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Handwashing Facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Per Thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital Beds Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hospital Beds Per Thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Human Development Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Human Development Index]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Human Development Index</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Median Age</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Per Million</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Smoothed</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Smoothed Per Million</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Per Million</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Smoothed</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Smoothed Per Million</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Vaccinations over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations over Population</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed Per Million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed Per Million</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Not Vaccinated over Population </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Not Vaccinated over Population ]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Not Vaccinated over Population </remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Fully Vaccinated]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Fully Vaccinated</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Fully Vaccinated Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Fully Vaccinated Per Hundred</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Vaccinated]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated over Population (delta)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated over Population (delta)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated over Population (delta)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated Per Hundred</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reproduction Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Reproduction Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Reproduction Rate</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stringency Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stringency Index]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Stringency Index</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Boosters]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Boosters</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Boosters Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Boosters Per Hundred</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Cases Per Million</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Deaths Per Million</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Vaccinations]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Vaccinations</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Vaccinations Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Vaccinations Per Hundred</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vaccinated over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Vaccinated over Population</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='share of people partially vacinated over population' datatype='real' name='[Calculation_71776162850553856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([People Vaccinated])/max([Population])' />
      </column>
      <column caption='people not vaccinated over population' datatype='real' name='[Calculation_71776162851618817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1- [Calculation_71776162850553856]' />
      </column>
      <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
      </column>
      <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Not Vaccinated over Population' datatype='real' name='[Not Vaccinated over Population ]' role='measure' type='quantitative' />
      <column caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228]' role='measure' type='quantitative' />
      <column caption='share of people fully vacinated over population (copy)' datatype='real' name='[share of people partially vacinated over population (copy)_71776162916814850]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([People Fully Vaccinated])/max([Population])' />
      </column>
      <column-instance column='[Calculation_71776162850553856]' derivation='User' name='[usr:Calculation_71776162850553856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[share of people partially vacinated over population (copy)_71776162916814850]' derivation='User' name='[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Continent' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Date Range Selected' />
        <field-sort-custom-order field='Excess Mortality' />
        <field-sort-custom-order field='Excess Mortality Cumulative' />
        <field-sort-custom-order field='Excess Mortality Cumulative Absolute' />
        <field-sort-custom-order field='Excess Mortality Cumulative Per Million' />
        <field-sort-custom-order field='Extreme Poverty' />
        <field-sort-custom-order field='Female Smokers' />
        <field-sort-custom-order field='Hosp Patients' />
        <field-sort-custom-order field='Hosp Patients Per Million' />
        <field-sort-custom-order field='Icu Patients' />
        <field-sort-custom-order field='Icu Patients Per Million' />
        <field-sort-custom-order field='Iso Code' />
        <field-sort-custom-order field='Location' />
        <field-sort-custom-order field='Location (copy)' />
        <field-sort-custom-order field='Location (geo)' />
        <field-sort-custom-order field='Male Smokers' />
        <field-sort-custom-order field='New Tests' />
        <field-sort-custom-order field='New Tests Per Thousand' />
        <field-sort-custom-order field='New Tests Smoothed' />
        <field-sort-custom-order field='New Tests Smoothed Per Thousand' />
        <field-sort-custom-order field='Positive Rate' />
        <field-sort-custom-order field='Tests Per Case' />
        <field-sort-custom-order field='Tests Units' />
        <field-sort-custom-order field='Total Tests' />
        <field-sort-custom-order field='Total Tests Per Thousand' />
        <field-sort-custom-order field='Weekly Hosp Admissions' />
        <field-sort-custom-order field='Weekly Hosp Admissions Per Million' />
        <field-sort-custom-order field='Weekly Icu Admissions' />
        <field-sort-custom-order field='Weekly Icu Admissions Per Million' />
        <field-sort-custom-order field='Aged 65 Older' />
        <field-sort-custom-order field='Aged 70 Older' />
        <field-sort-custom-order field='Cardiovasc Death Rate' />
        <field-sort-custom-order field='Diabetes Prevalence' />
        <field-sort-custom-order field='Fully Vaccinated over Population' />
        <field-sort-custom-order field='Gdp Per Capita' />
        <field-sort-custom-order field='Handwashing Facilities' />
        <field-sort-custom-order field='Hospital Beds Per Thousand' />
        <field-sort-custom-order field='Human Development Index' />
        <field-sort-custom-order field='Life Expectancy' />
        <field-sort-custom-order field='Median Age' />
        <field-sort-custom-order field='New Cases' />
        <field-sort-custom-order field='New Cases Per Million' />
        <field-sort-custom-order field='New Cases Smoothed' />
        <field-sort-custom-order field='New Cases Smoothed Per Million' />
        <field-sort-custom-order field='New Deaths' />
        <field-sort-custom-order field='New Deaths Per Million' />
        <field-sort-custom-order field='New Deaths Smoothed' />
        <field-sort-custom-order field='New Deaths Smoothed Per Million' />
        <field-sort-custom-order field='New Vaccinations' />
        <field-sort-custom-order field='New Vaccinations over Population' />
        <field-sort-custom-order field='New Vaccinations Smoothed' />
        <field-sort-custom-order field='New Vaccinations Smoothed Per Million' />
        <field-sort-custom-order field='Not Vaccinated over Population ' />
        <field-sort-custom-order field='People Fully Vaccinated' />
        <field-sort-custom-order field='People Fully Vaccinated Per Hundred' />
        <field-sort-custom-order field='People Vaccinated' />
        <field-sort-custom-order field='People Vaccinated over Population (delta)' />
        <field-sort-custom-order field='People Vaccinated Per Hundred' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Population Density' />
        <field-sort-custom-order field='Reproduction Rate' />
        <field-sort-custom-order field='Stringency Index' />
        <field-sort-custom-order field='Total Boosters' />
        <field-sort-custom-order field='Total Boosters Per Hundred' />
        <field-sort-custom-order field='Total Cases' />
        <field-sort-custom-order field='Total Cases Per Million' />
        <field-sort-custom-order field='Total Deaths' />
        <field-sort-custom-order field='Total Deaths Per Million' />
        <field-sort-custom-order field='Total Vaccinations' />
        <field-sort-custom-order field='Total Vaccinations Per Hundred' />
        <field-sort-custom-order field='Vaccinated over Population' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_71776162850553856' />
        <field-sort-custom-order field='share of people partially vacinated over population (copy)_71776162916814850' />
        <field-sort-custom-order field='Calculation_71776162851618817' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
          <calculation class='tableau' formula='#2021-10-25#' />
        </column>
        <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
          <calculation class='tableau' formula='#2020-01-09#' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' id='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_C79A9D845A5B41B3B5C67EB54234F228'>
            <properties context=''>
              <relation connection='textscan.0ibiqii0mufw1i1d8wjmq1349d2a' name='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' table='[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='boolean' name='Date Range Selected' ordinal='2' />
                  <column datatype='string' name='Excess Mortality' ordinal='3' />
                  <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
                  <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
                  <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
                  <column datatype='string' name='Extreme Poverty' ordinal='7' />
                  <column datatype='string' name='Female Smokers' ordinal='8' />
                  <column datatype='string' name='Hosp Patients' ordinal='9' />
                  <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
                  <column datatype='string' name='Icu Patients' ordinal='11' />
                  <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
                  <column datatype='string' name='Iso Code' ordinal='13' />
                  <column datatype='string' name='Location' ordinal='14' />
                  <column datatype='string' name='Location (copy)' ordinal='15' />
                  <column datatype='string' name='Location (geo)' ordinal='16' />
                  <column datatype='string' name='Male Smokers' ordinal='17' />
                  <column datatype='string' name='New Tests' ordinal='18' />
                  <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
                  <column datatype='string' name='New Tests Smoothed' ordinal='20' />
                  <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
                  <column datatype='string' name='Positive Rate' ordinal='22' />
                  <column datatype='string' name='Tests Per Case' ordinal='23' />
                  <column datatype='string' name='Tests Units' ordinal='24' />
                  <column datatype='string' name='Total Tests' ordinal='25' />
                  <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
                  <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
                  <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
                  <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
                  <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
                  <column datatype='real' name='Aged 65 Older' ordinal='31' />
                  <column datatype='real' name='Aged 70 Older' ordinal='32' />
                  <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
                  <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
                  <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
                  <column datatype='real' name='Gdp Per Capita' ordinal='36' />
                  <column datatype='real' name='Handwashing Facilities' ordinal='37' />
                  <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
                  <column datatype='real' name='Human Development Index' ordinal='39' />
                  <column datatype='real' name='Life Expectancy' ordinal='40' />
                  <column datatype='real' name='Median Age' ordinal='41' />
                  <column datatype='integer' name='New Cases' ordinal='42' />
                  <column datatype='real' name='New Cases Per Million' ordinal='43' />
                  <column datatype='real' name='New Cases Smoothed' ordinal='44' />
                  <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
                  <column datatype='integer' name='New Deaths' ordinal='46' />
                  <column datatype='real' name='New Deaths Per Million' ordinal='47' />
                  <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
                  <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
                  <column datatype='integer' name='New Vaccinations' ordinal='50' />
                  <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
                  <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
                  <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
                  <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
                  <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
                  <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
                  <column datatype='integer' name='People Vaccinated' ordinal='57' />
                  <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
                  <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
                  <column datatype='integer' name='Population' ordinal='60' />
                  <column datatype='real' name='Population Density' ordinal='61' />
                  <column datatype='real' name='Reproduction Rate' ordinal='62' />
                  <column datatype='real' name='Stringency Index' ordinal='63' />
                  <column datatype='integer' name='Total Boosters' ordinal='64' />
                  <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
                  <column datatype='integer' name='Total Cases' ordinal='66' />
                  <column datatype='real' name='Total Cases Per Million' ordinal='67' />
                  <column datatype='integer' name='Total Deaths' ordinal='68' />
                  <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
                  <column datatype='integer' name='Total Vaccinations' ordinal='70' />
                  <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
                  <column datatype='real' name='Vaccinated over Population' ordinal='72' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.006hhs91aw80fz1ch73z004u3oa3'>
      <datasources>
        <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
      </datasources>
      <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
        <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]'>
        <groupfilter function='member' level='[none:Calculation_71776162928005124:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Continent:nk]' member='%null%' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Africa&quot;' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Asia&quot;' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Europe&quot;' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;North America&quot;' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;Oceania&quot;' />
          <groupfilter function='member' level='[none:Continent:nk]' member='&quot;South America&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]'>
        <groupfilter function='level-members' level='[none:Location (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Albania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Algeria&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Angola&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Anguilla&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Antigua and Barbuda&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Argentina&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Armenia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Aruba&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Austria&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Azerbaijan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bahamas&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Barbados&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Belarus&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Belgium&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Belize&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Benin&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bermuda&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bhutan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bolivia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Botswana&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;British Virgin Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brunei&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Burkina Faso&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Burundi&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cambodia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cameroon&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cape Verde&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cayman Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Central African Republic&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Chad&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Chile&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Colombia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Comoros&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Congo&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cook Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Costa Rica&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Croatia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cuba&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Curacao&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Cyprus&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Czechia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Democratic Republic of Congo&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Dominica&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ecuador&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Egypt&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;El Salvador&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Equatorial Guinea&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Eritrea&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Eswatini&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ethiopia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;European Union&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Faeroe Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Falkland Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Fiji&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;French Polynesia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Gabon&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Gambia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ghana&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Gibraltar&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Greece&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Greenland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Grenada&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Guernsey&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Guinea&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Guinea-Bissau&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Guyana&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Honduras&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Hong Kong&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;International&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iraq&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Isle of Man&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Israel&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Jamaica&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Jersey&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Jordan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kazakhstan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kenya&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kiribati&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kosovo&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kuwait&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Kyrgyzstan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Laos&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Latvia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lebanon&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lesotho&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Libya&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Liechtenstein&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lithuania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Luxembourg&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Macao&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Madagascar&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Malawi&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Malaysia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Maldives&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mali&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Malta&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Marshall Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mauritania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mauritius&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Micronesia (country)&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mongolia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Montenegro&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Montserrat&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Morocco&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Myanmar&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Namibia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nauru&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nepal&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;New Caledonia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nicaragua&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Niue&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;North America&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;North Macedonia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Northern Cyprus&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Oceania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Oman&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Palau&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Palestine&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Papua New Guinea&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Paraguay&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Peru&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Philippines&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pitcairn&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Qatar&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Romania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Rwanda&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Saint Helena&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Saint Lucia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Samoa&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;San Marino&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sao Tome and Principe&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Saudi Arabia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Senegal&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Seychelles&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sierra Leone&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Slovakia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Slovenia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Solomon Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Somalia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;South America&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Korea&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Sudan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Spain&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sri Lanka&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sudan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Suriname&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Switzerland&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Syria&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Taiwan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tajikistan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tanzania&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Timor&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Togo&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tokelau&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tonga&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Trinidad and Tobago&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tunisia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turkey&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turkmenistan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turks and Caicos Islands&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Tuvalu&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Uganda&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Ukraine&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Arab Emirates&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Uruguay&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Uzbekistan&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vanuatu&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vatican&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Venezuela&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vietnam&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Wallis and Futuna&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;World&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Yemen&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Zambia&quot;' />
          <groupfilter function='member' level='[none:Location:nk]' member='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='KPI1:Share of People Partially vacinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Vaccinated]' derivation='Max' name='[max:People Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]' value='countries'>
              <formatted-text>
                <run>countries</run>
              </formatted-text>
            </format>
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'><![CDATA[<[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='10'>People Partially Vaccinated over population</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6B0544EE-24DA-4C11-86BD-B78062B72A02}' />
    </worksheet>
    <worksheet name='KPI2:Share of People Fully vacinated '>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Fully Vaccinated]' derivation='Max' name='[max:People Fully Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Fully Vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'><![CDATA[<[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Fully Vaccinated:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffbe7d' fontsize='10'>People Fully Vaccinated over Population</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A6316E95-AB8C-4404-90D5-289ADAAA2217}' />
    </worksheet>
    <worksheet name='KPI3:Share of People Not vacinated '>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='share of people partially vacinated over population' datatype='real' name='[Calculation_71776162850553856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([People Vaccinated])/max([Population])' />
            </column>
            <column caption='people not vaccinated over population' datatype='real' name='[Calculation_71776162851618817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1- [Calculation_71776162850553856]' />
            </column>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_71776162851618817]' derivation='User' name='[usr:Calculation_71776162851618817:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162851618817:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162851618817:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='15'><![CDATA[<[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162851618817:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffbe7d' fontsize='12'>share of people not vaccinated</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{29D6B207-8318-4990-8CBB-E35394562B34}' />
    </worksheet>
    <worksheet name='partially vaccinated vs fully vacinated '>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='share of people partially vacinated over population' datatype='real' name='[Calculation_71776162850553856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([People Vaccinated])/max([Population])' />
            </column>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column caption='share of people fully vacinated over population (copy)' datatype='real' name='[share of people partially vacinated over population (copy)_71776162916814850]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([People Fully Vaccinated])/max([Population])' />
            </column>
            <column-instance column='[Calculation_71776162850553856]' derivation='User' name='[usr:Calculation_71776162850553856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[share of people partially vacinated over population (copy)_71776162916814850]' derivation='User' name='[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' field-type='quantitative' fold='true' max='1.2568038587657593' min='-0.2746579743758007' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]' field-type='quantitative' max='1.377229370625904' min='-0.30097538812336699' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.006hhs91aw80fz1ch73z004u3oa3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.006hhs91aw80fz1ch73z004u3oa3].[:Measure Names]' />
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.006hhs91aw80fz1ch73z004u3oa3].[:Measure Names]' />
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</rows>
        <cols>([federated.006hhs91aw80fz1ch73z004u3oa3].[usr:Calculation_71776162850553856:qk] + [federated.006hhs91aw80fz1ch73z004u3oa3].[usr:share of people partially vacinated over population (copy)_71776162916814850:qk])</cols>
      </table>
      <simple-id uuid='{C664D2D9-4F0A-4C02-9B2C-667E11B216DC}' />
    </worksheet>
    <worksheet name='vaccinated over Gdp'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Gdp Per Capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[People Vaccinated Per Hundred]' role='measure' type='quantitative' />
            <column-instance column='[Gdp Per Capita]' derivation='Max' name='[max:Gdp Per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People Vaccinated Per Hundred]' derivation='Max' name='[max:People Vaccinated Per Hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:Gdp Per Capita:qk]' field-type='quantitative' max='138030.8602900102' min='-10612.949924822684' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]' field-type='quantitative' max='104.2196787484486' min='-18.544693774909547' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#f28e2b4b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]' />
              <lod column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]</rows>
        <cols>[federated.006hhs91aw80fz1ch73z004u3oa3].[max:Gdp Per Capita:qk]</cols>
      </table>
      <simple-id uuid='{197E49A9-5343-4D3F-954C-3BB879700896}' />
    </worksheet>
    <worksheet name='vaccination per hundred'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
            <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
              <calculation class='tableau' formula='#2020-01-09#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
            <column caption='filtre selected date' datatype='boolean' name='[Calculation_71776162928005124]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[select start date (copy)_71776162927640579] AND [Date]&lt;= [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[People Vaccinated Per Hundred]' role='measure' type='quantitative' />
            <column-instance column='[People Vaccinated Per Hundred]' derivation='Max' name='[max:People Vaccinated Per Hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71776162928005124]' derivation='None' name='[none:Calculation_71776162928005124:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</column>
            <column>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[Longitude (generated)]' field-type='quantitative' max='116861585.56117454' min='29523179.944278434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[Latitude (generated)]' field-type='quantitative' max='12227519.87127671' min='-10752185.369408464' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cecee5</color>
                <color>#aeaeda</color>
                <color>#9090ce</color>
                <color>#7575c3</color>
                <color>#5c5cb8</color>
                <color>#4545ac</color>
                <color>#3030a1</color>
                <color>#1d1d95</color>
                <color>#0d0d8a</color>
                <color>#00007f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]' value='Continent'>
              <formatted-text>
                <run bold='true'>Continent</run>
              </formatted-text>
            </format>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]' />
              <lod column='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (geo):nk]' />
              <geometry column='[federated.006hhs91aw80fz1ch73z004u3oa3].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#787878'>Location (geo):&#9;</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (geo):nk]>]]></run>
                <run fontalignment='1'>Æ&#10;</run>
                <run bold='true' fontalignment='1' fontcolor='#787878'>Max. People Vaccinated Per Hundred:	</run>
                <run bold='true' fontalignment='1'><![CDATA[<[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.006hhs91aw80fz1ch73z004u3oa3].[Latitude (generated)]</rows>
        <cols>[federated.006hhs91aw80fz1ch73z004u3oa3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3212A9A3-9C86-4FB5-9EDC-2037FC0FFF17}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Global Vaccine Tracker'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_26' value='center' />
        </style-rule>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl'>
          <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[Parameters].[select start date (copy)_71776162927640579]' value='#f9e9e0' />
          <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[Parameters].[Parameter 1]' value='#f9e9e0' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='1500' maxwidth='1150' minheight='1500' minwidth='1150' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.006hhs91aw80fz1ch73z004u3oa3' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select end date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
          <calculation class='tableau' formula='#2021-10-25#' />
        </column>
        <column caption='select start date ' datatype='date' name='[select start date (copy)_71776162927640579]' param-domain-type='any' role='measure' type='quantitative' value='#2020-01-09#'>
          <calculation class='tableau' formula='#2020-01-09#' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.006hhs91aw80fz1ch73z004u3oa3'>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='75200' id='7' param='horz' type-v2='layout-flow' w='98608' x='696' y='24267'>
            <zone h='75200' id='5' type-v2='layout-basic' w='98608' x='696' y='24267'>
              <zone h='28866' id='21' name='partially vaccinated vs fully vacinated ' w='98608' x='696' y='24267'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23167' id='25' name='vaccinated over Gdp' w='98608' x='696' y='76300'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23167' id='27' name='vaccination per hundred' w='98608' x='696' y='53133'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='10334' id='18' name='KPI1:Share of People Partially vacinated' w='32695' x='66609' y='13933'>
            <layout-cache fixed-size-h='117' fixed-size-w='297' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10334' id='19' name='KPI2:Share of People Fully vacinated ' w='33739' x='696' y='13933'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10334' id='20' name='KPI3:Share of People Not vacinated ' w='32174' x='34435' y='13933'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='4434' id='24' param='horz' type-v2='layout-flow' w='49304' x='696' y='4233'>
            <zone h='3467' id='13' mode='checkdropdown' name='KPI1:Share of People Partially vacinated' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]' show-apply='true' type-v2='filter' w='49304' x='696' y='4233'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='4434' id='14' mode='pattern' name='KPI1:Share of People Partially vacinated' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]' type-v2='filter' w='37565' x='50000' y='4233'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5266' id='15' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='49304' x='50000' y='8667'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5266' id='16' mode='datetime' param='[Parameters].[select start date (copy)_71776162927640579]' type-v2='paramctrl' w='41565' x='8435' y='8667'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='3700' id='26' type-v2='text' w='89478' x='9826' y='533'>
            <formatted-text>
              <run bold='true' fontcolor='#9d7660' fontsize='15'>COVID-19 Global Vaccination Tracker</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5266' id='30' is-centered='0' is-scaled='1' param='C:/Users/smart/Downloads/date.jpg' type-v2='bitmap' w='7739' x='696' y='8667'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3700' id='31' is-centered='0' is-scaled='1' param='C:/Users/smart/Downloads/covid.png' type-v2='bitmap' w='9130' x='696' y='533'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='4434' id='32' is-scaled='1' param='C:/Users/smart/Downloads/continent.jpg' type-v2='bitmap' w='11739' x='87565' y='4233'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98934' id='33' param='vert' type-v2='layout-flow' w='98608' x='696' y='533'>
                <zone fixed-size='47' h='3700' id='31' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/smart/Downloads/covid.png' type-v2='bitmap' w='9130' x='696' y='533'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3700' id='26' type-v2='text' w='89478' x='9826' y='533'>
                  <formatted-text>
                    <run bold='true' fontcolor='#9d7660' fontsize='15'>COVID-19 Global Vaccination Tracker</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='58' h='4434' id='32' is-fixed='true' is-scaled='1' param='C:/Users/smart/Downloads/continent.jpg' type-v2='bitmap' w='11739' x='87565' y='4233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='5266' id='30' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/smart/Downloads/date.jpg' type-v2='bitmap' w='7739' x='696' y='8667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5266' id='16' mode='datetime' param='[Parameters].[select start date (copy)_71776162927640579]' type-v2='paramctrl' w='41565' x='8435' y='8667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5266' id='15' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='49304' x='50000' y='8667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='10334' id='19' is-fixed='true' name='KPI2:Share of People Fully vacinated ' w='33739' x='696' y='13933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='10334' id='20' is-fixed='true' name='KPI3:Share of People Not vacinated ' w='32174' x='34435' y='13933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3467' id='13' mode='checkdropdown' name='KPI1:Share of People Partially vacinated' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]' show-apply='true' type-v2='filter' w='49304' x='696' y='4233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4434' id='14' mode='pattern' name='KPI1:Share of People Partially vacinated' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]' type-v2='filter' w='37565' x='50000' y='4233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='147' h='10334' id='18' is-fixed='true' name='KPI1:Share of People Partially vacinated' w='32695' x='66609' y='13933'>
                  <layout-cache fixed-size-h='117' fixed-size-w='297' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28866' id='21' is-fixed='true' name='partially vaccinated vs fully vacinated ' w='98608' x='696' y='24267'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23167' id='27' is-fixed='true' name='vaccination per hundred' w='98608' x='696' y='53133'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23167' id='25' is-fixed='true' name='vaccinated over Gdp' w='98608' x='696' y='76300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C92162F8-F82B-4D3D-AA26-953C97AF1BED}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='KPI1:Share of People Partially vacinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]' show-apply='true' type='filter' />
            <card mode='pattern' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]' type='filter' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='datetime' param='[Parameters].[select start date (copy)_71776162927640579]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Calculation_71776162928005124:nk]</field>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Continent:nk]</field>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (copy):nk]</field>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2400C08-A895-42FB-B20C-398314031B40}' />
    </window>
    <window class='worksheet' name='KPI2:Share of People Fully vacinated '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3E461AFE-95EE-4AA1-95A2-1D2E70F5B18B}' />
    </window>
    <window class='worksheet' name='KPI3:Share of People Not vacinated '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{86E58A16-A33D-4CE2-8FB2-E94D58F786D0}' />
    </window>
    <window class='worksheet' name='partially vaccinated vs fully vacinated '>
      <cards>
        <edge name='left'>
          <strip size='285'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40621D74-3EAC-4C3D-BB67-9AC8E89331C3}' />
    </window>
    <window class='worksheet' name='vaccination per hundred'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[max:People Vaccinated Per Hundred:qk]</field>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{802D385D-ABB6-422D-BD03-9AA0405DCE06}' />
    </window>
    <window class='worksheet' name='vaccinated over Gdp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006hhs91aw80fz1ch73z004u3oa3].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50301FE6-1DD1-4A99-833C-D92D6C9CB809}' />
    </window>
    <window class='dashboard' maximized='true' name='Global Vaccine Tracker'>
      <viewpoints>
        <viewpoint name='KPI1:Share of People Partially vacinated'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI2:Share of People Fully vacinated '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI3:Share of People Not vacinated '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='partially vaccinated vs fully vacinated '>
          <highlight field='[federated.006hhs91aw80fz1ch73z004u3oa3].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='vaccinated over Gdp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='vaccination per hundred'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AB7E27FE-7E7E-4C6A-8D1C-09B8D5DB0D32}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Global Vaccine Tracker' width='192'>
      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
      rK0lH7A06d5srCwwv7wOwNLsJMMjY+jmg0MTokFyNf27V1lbs7faL5ae/BcirZpnK1vZ0bO3
      GcDIyBCN0hbjc2sMT0zz/PPPceXSb8ksj7GWV0llCjxztJVPr4yQTqcZvvQpzb0ncZkaG8k1
      Vpbn2cwUUGtlRkZGqKoGxWKRjbU1dFNnYnwc1bALhN6ocH1sEt0wePOX7yC77K9P07OLPPel
      s1z8+GP0RpXxyWlMIShmt5ieX0FYJhvJFabnlhCYJNc2MA2VifEJNNMOe2pukRdeeIGO5jDF
      UgWtVqHS0Egmk6TXk5QqZaqqTr1SoqGbFPN5TAHFQoFqOc/I6BiqbqLWSoxNTFFIb5DKV8ll
      UoyPT6KbFsnleeaWk5RyG/zt3/yUtc00+fQmizcMcmt9mctXr9DQH65IjowMsbUyTTJTYWph
      mWfPn+aT337E1PgIjUYDX7QVT3WduVSBdDrDxU8v0n/6DFq9wlpylbnpCQqVBuV8mpHrExiW
      oFgsklxLotUrjE/OYN2wnkohw+TsIkajwjsffHRrDuPy2ibnBvr46KPfUi1mbxicYGt9hZX1
      LYTRYHFxkaVkCmiQXMug1UqMT83dMsDBj37J4Mwq45OTIGzD3djOk5y9yt/991+SK9XQ62Uq
      DQO1WqRSqzM2OkK+XEdYBpNj1ylVaiwsLVMsFJiZHKdU0yhkUoyOT6E1Kvy/f/O3TM+voNXL
      jE/OYgko59MMD14l9SgGYDaq/Pzdi3z1pWcRep3BwSFkb+DGXYmu1gQffXKV02cGAHjm9CnG
      r11hM1PAMlR8kVZmp8ZRVRVTb/D++x9y+bcfYih+Bi9+Ss+xo1y5fAUQfHrpMv19XVy6MkTH
      kV7OnjoBQKNSYGh4BH84ysVLlznaGefylSGGJuZp9mmMTs4yMr1CTKkxNmcXtssXL9FztJsr
      V4ZuhFFkcHCQrXSayckFiuuLLG59XhO5JJ1r164zMjyM5HJRzSVZ3MgyPjGJ1lDR63l+/fFn
      XLx0lRPHj1EvFKg0dC5dvkxXk5fx+TXUhsropQ+pyhH6+/vpSngZnkli5JNMT02ynNHp7Wx7
      qMJ/s1BevL7M+ZO91Es5hkZGCYZj9k3Zi1baZmh2g7aonS8nTxzj6uVLFKoqjUqZtp4+RocH
      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
      +cDCYPIjrQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='50' name='KPI1:Share of People Partially vacinated' width='192'>
      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
      Tm/f/zb5LzjNRaWXwUE4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='50' name='KPI2:Share of People Fully vacinated ' width='192'>
      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
    </thumbnail>
    <thumbnail height='54' name='KPI3:Share of People Not vacinated ' width='192'>
      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
      lnBuNQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='partially vaccinated vs fully vacinated ' width='192'>
      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
      ChUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='vaccinated over Gdp' width='192'>
      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
      9Z3LF1pV3SIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='vaccination per hundred' width='192'>
      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
      pLKysjh50uk0giDgcDjo7j5IY2OI2traYp/gwp9AoISRkWGOHAlhGFPo+jSyPMcTT2js3avh
      dJZTW2vwu7975IYq1aIo0tnZgc8nrjrAM80Me/dK/MEfHMHj8WCz2fja175CMjnP1NQQsZif
      VCpGJhMHUvj9ATo6HsFmU1a8hsnRo8fo6xtch28+j7UCbDCpVIorV3rYv38fAFNTkywuJojH
      l1DVDLquEYtF0HWdRCLOzMws6XSKmpraVZMzFssfoBVOR7PZLKlU6gYTwjRNPvush0DAT1lZ
      Gd3dNrq69mCa4Pf7GB0dpaPDQWfnrpuWaFcUhYoKN8vLGoIgo+tL7Nvn5IUXDq5q9udwOIhG
      pwmFQgwNzeH3P45p6qRS53n99bf4kz/5Q6LRaLFuaS6XY3Jynqam+jXf92FgCWCD8fv9NDU1
      FidqMplkYWEOrzfJrl1t1NXVoes6o6MjxGJxlpeX8Pn8KIrC5cuXcDgcqKrK+PgYXV37inbw
      lSuX2bt33w3dJ/MJ8HH8/gAXL17C5XKRyWSIxWKk00keeWQ3iqLc0sUoCAJ79myjr28AQSjB
      MBb50pe+dUOViXg8zne/+6+Zmwtz5szPyeWmWVycI5dTSSSSnD/fy5NPPlp8jt1uR5JyvPvu
      O9hsCh0dD65x+M2wTKANxmazUV5eXjQnvF4PIyMDgMxnnw1x4sRJJicnSCaT+P1+ysrKmZ6e
      RlVVqqpqcLnclJVV0NDQxCefnFxVWGppKYKmaVeLyaq88cbrHD36Lk8/fYju7ifo7NzL5OQE
      Ho+bsrIykskkAwMDzM/P33bcTU2NlJTkXbNut7LmStPT03PVtDPJ5aZ49dUmTFNC09y43X7s
      dlvxWtM0WVhYoKyslGQyyS9/+Usymcx9f7/51E6j+PP1WCvAJuPw4cP4/QH6+kZwOr1Eo8sk
      kyOAweTkLJHIAs3NTZSWBlclgH/yyXE0TSWbzfLZZ5+RSGQZHDzH9PQUkiSh6xqNjQ2Ew/NU
      VOQT1evq6mhs3MbJk5/Q1tZOeXkIUeSGTfNaSJLEY4818eabkxjGDMlkCrf7Wli3IAi0tbUh
      SRKiKOJ0eti9exff+56Xn/3sdV566QhdXR3F61OpFGfOnOWJJx5nZmaGSGSJ2dlZGhsbH8j3
      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
      8wYAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
